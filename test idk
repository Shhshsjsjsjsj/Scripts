-- Check
if Vynixu_Crucifix_Everything then return Vynixu_Crucifix_Everything end

-- Functions.lua
loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Functions.lua"))()

-- Services
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Variables
local localPlayer = Players.LocalPlayer
local localCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local localRoot = localCharacter:WaitForChild("HumanoidRootPart")
local localPlayerGui = localPlayer:WaitForChild("PlayerGui")
local localMouse = localPlayer:GetMouse()

local assets = {
    Repentance = LoadCustomInstance("https://github.com/Shhshsjsjsjsj/Scripts/blob/main/L.rbxm"),
    Crucifix = LoadCustomInstance("https://github.com/RegularVynixu/Utilities/raw/refs/heads/main/Doors/Item%20Spawner/Assets/Crucifix.rbxm")
}
local moduleScripts = {
	Main_Game = require(localPlayerGui.MainUI.Initiator.Main_Game),
}
getgenv().vynixu_crucifix_manager = {
    Signals = {},
    Crucifixes = {}
}
local module = {}

-- Functions
function WaitUntil(sound, t)
    repeat RunService.RenderStepped:Wait() until sound.TimePosition >= t
end

function FadeOut(pentagram)
    for _, c in pentagram:GetChildren() do
        if c.Name == "BeamFlat" then
            task.delay(c:GetAttribute("Delay"), function()
                TweenService:Create(c, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), { Brightness = 0 }):Play()
            end)

        elseif c.Name == "BeamChain" then
            TweenService:Create(c, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), { Brightness = 0 }):Play()
        end
    end
end

function Crucifix(model, playerTool, config)
    -- Handle crucifix uses
    if typeof(config.Uses) == "number" then
        config.Uses -= 1

        if config.Uses <= 0 then
            Destroy(playerTool)
        end
    end

    -- Setup
    local tool = assets.Crucifix:Clone()
    tool:PivotTo(localRoot.CFrame)
    tool.Parent = workspace

	local toolPivot = tool:GetPivot()
	local entityPivot = model:GetPivot()

	local params = RaycastParams.new()
	params.FilterType = Enum.RaycastFilterType.Exclude
	params.FilterDescendantsInstances = {localCharacter, model}
	local result = workspace:Raycast(entityPivot.Position, Vector3.new(0, -1000, 0), params)
	
    if not result then
        return
    end

    model:SetAttribute("BeingBanished", true)

    -- Variables
	local repentance = assets.Repentance:Clone()
	local crucifix = repentance.Crucifix
	local pentagram = repentance.Pentagram
	local entityPart = repentance.Entity
	local sound = (config.Resist and crucifix.SoundFail or crucifix.Sound)
	local shaker = moduleScripts.Main_Game.camShaker:StartShake(5, 20, 2, Vector3.new())

    -- Repentance setup
	repentance:PivotTo(CFrame.new(result.Position))
	crucifix.CFrame = toolPivot
	repentance.Entity.CFrame = entityPivot
    crucifix.BodyPosition.Position = (localCharacter:GetPivot() * CFrame.new(0.5, 3, -6)).Position
	repentance.Parent = workspace
	sound:Play()

    -- Teleport model to repentance entity part
	task.spawn(function()
        if not config.Resist then
            while model.Parent and repentance.Parent do
                model:PivotTo(entityPart.CFrame)
                task.wait()
            end

            model:Destroy()
        end
	end)

	-- Pentagram animation
	TweenService:Create(pentagram.Circle, TweenInfo.new(2, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), { CFrame = pentagram.Circle.CFrame - Vector3.new(0, 25, 0) }):Play()
	TweenService:Create(crucifix.BodyAngularVelocity, TweenInfo.new(4, Enum.EasingStyle.Sine, Enum.EasingDirection.In), { AngularVelocity = Vector3.new(0, 40, 0) }):Play()
	task.delay(2, pentagram.Circle.Destroy, pentagram.Circle)

	task.spawn(function()
        WaitUntil(sound, 2.625)
		
        TweenService:Create(pentagram.Base.LightAttach.LightBright, TweenInfo.new(1.5, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
			Brightness = 5,
			Range = 40
		}):Play()
		
        TweenService:Create(crucifix.Light, TweenInfo.new(1.5, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut), {
			Brightness = 11.25,
			Range = 30
		}):Play()
		
        task.wait(1.5)
		
    